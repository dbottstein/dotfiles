function +vi-prompt_bira_set_message {
	if [[ $omg[enabled] == false ]]; then
		hook_com[branch]=""
		hook_com[staged]=""
		hook_com[unstaged]=""
		hook_com[action]=""
		return;
	fi

  	local branch="%B%F{$prompt_bira_colors[branch]}${omg[branch]}%f%b"
  	local staged unstaged

    (( $omg[behind] )) && branch+="%F{$prompt_bira_colors[behind]}$prompt_bira_symbols[behind]$omg[behind]%f"
    (( $omg[ahead]  )) && branch+="%F{$prompt_bira_colors[ahead]}$prompt_bira_symbols[ahead]$omg[ahead]%f"
    (( $omg[staged] )) && staged="%F{$prompt_bira_colors[staged]}$prompt_bira_symbols[staged]$omg[staged]%f"

	if (( $omg[unstaged] )); then
		local changed=$(( $omg[modifications] + $omg[deletions] ))

		(( $omg[conflicts] )) && unstaged+="%F{$prompt_bira_colors[conflicts]}$prompt_bira_symbols[conflicts]$omg[conflicts]%f"
		(( $changed        )) && unstaged+="%F{$prompt_bira_colors[changed]}$prompt_bira_symbols[changed]$changed%f"
		(( $omg[untracked] )) && unstaged+="%F{$prompt_bira_colors[untracked]}$prompt_bira_symbols[untracked]$omg[untracked]%f"
	else
		unstaged="%F{$prompt_bira_colors[clean]}$prompt_bira_symbols[clean]%f"
	fi

	hook_com[branch]=$branch
	hook_com[staged]=$staged
	hook_com[unstaged]=$unstaged

	[ -n "$omg[action]" ] && hook_com[action]="%B%F{$prompt_bira_colors[action]}${omg[action]}%f%b"
}

prompt_bira_precmd() {
	vcs_info 'prompt'
}

prompt_bira_setup() {
	autoload -Uz add-zsh-hook vcs_info
	typeset -A symbols colors

	zstyle -a ':vcs_info:*:prompt:*:bira' symbols symbols
	zstyle -a ':vcs_info:*:prompt:*:bira' colors colors

    typeset -gA prompt_bira_symbols=(
        prompt      ${symbols[prompt]:-'%#'}
        return      ${symbols[return]:-'%{↵%G%}'}

        behind      ${symbols[behind]:-'%{↓%G%}'}
        ahead       ${symbols[ahead]:-'%{↑%G%}'}
        staged      ${symbols[staged]:-'%{●%G%}'}
        changed     ${symbols[changed]:-'%{±%G%}'}
        untracked   ${symbols[untracked]:-'%{¿%G%}'}
        conflicts   ${symbols[conflicts]:-'%{✘%G%}'}
        clean       ${symbols[clean]:-'%{✓%G%}'}
    )

    typeset -gA prompt_bira_colors=(
        prompt      ${colors[prompt]:-white}
        return      ${colors[return]:-red}
        directory   ${colors[directory]:-blue}
        user        ${colors[user]:-118}

        branch      ${colors[branch]:-magenta}
        behind      ${colors[behind]:-41}
        ahead       ${colors[ahead]:-47}
        staged      ${colors[staged]:-118}
        clean       ${colors[clean]:-118}
        changed     ${colors[changed]:-135}
        untracked   ${colors[untracked]:-244}
        conflicts   ${colors[conflicts]:-red}
        action      ${colors[action]:-yellow}
    )

	local return_code="%(?..%F{$prompt_bira_colors[return]}%? ${prompt_bira_symbols[return]}%f)"
	local   user_host="%F{$prompt_bira_colors[user]}%n@%m%f"
	local current_dir="%B%F{$prompt_bira_colors[directory]:}%~%f%b"

	# Add hook for calling vcs_info before each prompt.
	add-zsh-hook precmd prompt_bira_precmd

	# Set vcs_info parameters.
	zstyle ':vcs_info:*:prompt:*' formats       "(%b|%c%u)"
	zstyle ':vcs_info:*:prompt:*' actionformats "(%b|%c%u|%a)"
	zstyle ':vcs_info:*:prompt:*' nvcsformats   ""
	zstyle ':vcs_info:git*+set-message:*' hooks prompt_bira_set_message

	 PROMPT="╭─${user_host}  ${current_dir}  "'${vcs_info_msg_0_}'$'\n'"╰─%B%F{$prompt_bira_colors[prompt]}${prompt_bira_symbols[prompt]}%f%b "
	RPROMPT="${return_code}"
}

prompt_bira_setup "$@"
